version: '3.8'

services:
  # Backend API server
  server:
    image: phillywraps/influencerhub-server:latest
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - SERVICE=server
    container_name: influencerhub-server
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - PORT=5000
      - MONGO_URI=mongodb://mongodb:27017/influencer-platform
      - REDIS_URI=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET}
      - REFRESH_TOKEN_SECRET=${REFRESH_TOKEN_SECRET}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}
      - SLACK_WEBHOOK=${SLACK_WEBHOOK}
      - TIKTOK_CLIENT_KEY=${TIKTOK_CLIENT_KEY}
      - TIKTOK_CLIENT_SECRET=${TIKTOK_CLIENT_SECRET}
      - CORS_ORIGIN=${CORS_ORIGIN}
      - ENABLE_RATE_LIMITING=true
      - ENABLE_XSS_PROTECTION=true
      - ENABLE_CSRF_PROTECTION=true
    depends_on:
      - mongodb
      - redis
    networks:
      - app-network

  # Frontend web application
  client:
    image: phillywraps/influencerhub-client:latest
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - SERVICE=client
        - REACT_APP_API_URL=http://localhost:5000
        - REACT_APP_SOCKET_URL=ws://localhost:5000
    container_name: influencerhub-client
    restart: unless-stopped
    ports:
      - "3000:80" # Nginx serves on port 80 internally
    depends_on:
      - server
    networks:
      - app-network

  # MongoDB database
  mongodb:
    image: mongo:5
    container_name: influencerhub-mongodb
    restart: unless-stopped
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USER:-admin}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD:-password}
    ports:
      - "27017:27017"
    volumes:
      - mongodb-data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d
    networks:
      - app-network
    command: ["--auth", "--bind_ip_all"]

  # Redis for caching rate limiting and sessions
  redis:
    image: redis:6-alpine
    container_name: influencerhub-redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD:-redis123} --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mongodb-data:
  redis-data:
